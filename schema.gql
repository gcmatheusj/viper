# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Author {
  id: String!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input AuthorInput {
  name: String!
}

type Book {
  id: String!
  title: String!
  authorId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  author: Author!
}

input BookAuthorConnectInput {
  id: Float!
}

input BookAuthorInput {
  connect: BookAuthorConnectInput
  create: AuthorInput
}

type BookGenre {
  id: String!
  bookId: String!
  genreId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input BookInput {
  title: String!
  author: BookAuthorInput!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Genre {
  id: String!
  name: String!
  createdAt: DateTime!
}

input GenreBookInput {
  genreId: String!
  bookId: String!
}

input GenreInput {
  name: String!
}

type Mutation {
  createAuthor(data: AuthorInput!): Author!
  createBook(data: BookInput!): Book!
  createGenre(data: GenreInput!): Genre!
  createBookGenre(data: GenreBookInput!): BookGenre!
}

type Query {
  getAuthors: [Author!]!
  getAuthor(id: String!): Author
  getBooks: [Book!]!
  getBook(id: String!): Book
  genres: [Genre!]!
  genre(id: String!): Genre
  bookGenres: [BookGenre!]!
  bookGenre(id: String!): BookGenre!
}
